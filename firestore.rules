rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // User profiles - users can read/write only their own data
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      
      // Only allow admins or the user themselves to write to their profile
      allow write: if request.auth != null && 
        (request.auth.uid == userId || 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }
    
    // Subjects - teachers can create/update, students can only read subjects they're enrolled in
    match /subjects/{subjectId} {
      // Check if the current user is a teacher
      function isTeacher() {
        return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'teacher';
      }
      
      // Check if the current user is enrolled in this subject
      function isEnrolledStudent() {
        let subject = get(/databases/$(database)/documents/subjects/$(subjectId)).data;
        return subject.students != null && 
              subject.students.hasAny([{'id': request.auth.uid}]);
      }
      
      // Teachers can create and manage subjects they own, students can only read
      allow create: if request.auth != null && isTeacher();
      allow read: if request.auth != null && 
                   (isTeacher() || isEnrolledStudent() || 
                    resource.data.teacherId == request.auth.uid);
      allow update, delete: if request.auth != null && 
                             (isTeacher() && resource.data.teacherId == request.auth.uid);
    }
    
    // Classes - teachers can manage, students can read
    match /classes/{classId} {
      function isTeacher() {
        return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'teacher';
      }
      
      // All authenticated users can read classes, only teachers can modify
      allow read: if request.auth != null;
      allow write: if request.auth != null && isTeacher();
    }
    
    // Sessions - teachers can manage, students can read
    match /sessions/{sessionId} {
      function isTeacher() {
        return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'teacher';
      }
      
      allow read: if request.auth != null;
      allow write: if request.auth != null && isTeacher();
    }
    
    // Activities - teachers can create/read, students can only read their own
    match /activities/{activityId} {
      function isTeacher() {
        return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'teacher';
      }
      
      allow read: if request.auth != null && 
                   (isTeacher() || resource.data.studentId == request.auth.uid);
      allow create, update: if request.auth != null && isTeacher();
    }
  }
} 